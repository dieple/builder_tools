#################################################################
# CloudOps IaC Local Development Environment
#
# Please do not modify the Dockerfile manually as it generate
# by setup.py. All modifications should be done in
# templates/Dockerfile.template
#################################################################
FROM dieple/builder_tools

ARG profile
ARG terraformVersion
ARG flyCLIVersion
ARG dockerAppUser
ARG sshKeyPassphrase

# Warning: It is not recommended to use build-time variables for passing secrets like github
# keys, user credentials etc. 
# Build-time variable values are visible to any user of the image with the docker 
# history command. 
# Since I'm using this for my personal local development env so should be OK.
ARG sshKey
ARG sshKeyPub

#ENV TERM=xterm-256color

# Set this environment variable to true to set timezone on container start.
ENV SET_CONTAINER_TIMEZONE false
# Default container timezone as found under the directory /usr/share/zoneinfo/.
ENV CONTAINER_TIMEZONE Europe/London

###INSTALL_TERRAFORM###RUN curl -sL -o $HOME/terraform.zip \
    "https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip" && \
    unzip $HOME/terraform.zip -d /usr/local/bin && rm -rf $HOME/terraform.zip


RUN echo "root:${dockerAppUser}" |chpasswd \
    && useradd -ms /bin/bash ${dockerAppUser} \
    && echo "${dockerAppUser}:${dockerAppUser}" |chpasswd \
    && adduser "${dockerAppUser}" sudo


VOLUME ["/repos"]

#ADD api-server.py /scripts
RUN mkdir -p /scripts
ADD pip_packages /scripts
WORKDIR /scripts
RUN pip install setuptools && pip install -r pip_packages
ADD scripts/kms_encrypt.py "/scripts"
ADD scripts/kms_decrypt.py "/scripts"
ADD scripts/assume-role.sh "/scripts"
ADD scripts/ntp.sh "/scripts"
RUN /scripts/ntp.sh
RUN chown -R "${dockerAppUser}:${dockerAppUser}" /scripts
RUN rm -rf $HOME/.cache
RUN mkdir -p "/home/${dockerAppUser}/.ssh"
RUN chmod 0700 "/home/${dockerAppUser}/.ssh"
RUN echo "$sshKey" > "/home/${dockerAppUser}/.ssh/id_rsa" && chmod 0600 "/home/${dockerAppUser}/.ssh/id_rsa"
RUN echo "$sshKeyPub" > "/home/${dockerAppUser}/.ssh/id_rsa.pub" && chmod 0644 "/home/${dockerAppUser}/.ssh/id_rsa.pub"
RUN chown -R "${dockerAppUser}:${dockerAppUser}" "/home/${dockerAppUser}/.ssh"

RUN eval `ssh-agent -s` && \
   printf "${SSH_KEY_PASSPHRASE}\n" | ssh-add /home/${dockerAppUser}/.ssh/id_rsa

ADD templates/vimrc "/home/${dockerAppUser}/.vimrc"
RUN echo 'source <(kubectl completion bash)' | tee -a "/home/${dockerAppUser}/.bashrc"
RUN echo 'alias k=kubectl' | tee -a "/home/${dockerAppUser}/.bashrc"
RUN echo 'alias k9s="export TERM=xterm && k9s"' | tee -a "/home/${dockerAppUser}/.bashrc"

# Set the vault profile in the environment for assume-role scripts.
ENV VAULT_PROFILE=$profile

# Setup TERM and PS1
ENV TERM=xterm-color
RUN echo '#override PS1' | tee -a "/home/${dockerAppUser}/.bashrc"
RUN echo "export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '" | tee -a "/home/${dockerAppUser}/.bashrc"

# Add to PATH variable.
RUN echo 'export PATH=$PATH:/scripts' | tee -a "/home/${dockerAppUser}/.bashrc"

USER ${dockerAppuser}
#EXPOSE 5000
WORKDIR /repos
#CMD  python /scripts/api-server.py /repos


# Note that entry.sh is generated by setup.py script
###INSTALL_AWS_VAULT###ADD entry.sh /scripts/
###INSTALL_AWS_VAULT###ENTRYPOINT ["/scripts/entry.sh"]
